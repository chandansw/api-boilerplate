{
    "swagger": "2.0",
    "info": {
        "title": "Featherback API",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://api.featherback.co",
            "description": "Production API"
        },
        {
            "url": "https://test-api.featherback.co",
            "description": "Staging API"
        },
        {
            "url": "http://localhost:1337",
            "description": "Local Development API"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Get metadata about the API",
                "description": "This is a utility endpoint useful for development, testing and diagnosis."
            }
        },
        "/teapot": {
            "get": {
                "summary": "Get an example handled error response",
                "description": "This is a utility endpoint useful for development, testing and diagnosis."
            }
        },
        "/error": {
            "get": {
                "summary": "Get an example unhandled error thrown with the API",
                "description": "This is a utility endpoint useful for development, testing and diagnosis."
            }
        },
        "/login": {
            "get": {
                "summary": "Authenticates a User returning a JWT",
                "description": "Authenticated endpoints require a valid JWT to use."
            }
        },
        "/whoami": {
            "get": {
                "summary": "Get the profile of the authenticated User"
            }
        },
        "/signup": {
            "post": {
                "summary": "Create a new Customer and User",
                "description": "Create a new Customer and User in the system with default configuration. The Customer and User are registered with the same email address. The User has Admin privilages over the Customer."
            }
        },
        "/customers": {
            "get": {
                "summary": "Search Customers",
                "descripton": "Search Customers registered on the platform. Root Users only."
            },
            "post": {
                "summary": "Create a new Customer",
                "description": "Add a new Customer to the platform. Root Users only."
            }
        },
        "/customers/{customerId}": {
            "get": {
                "summary": "Get account information for a Customer",
                "description": "Get information for a single Customer. Root and Admin Users only."
            },
            "patch": {
                "summary": "Update a Customer",
                "description": "Update a Customer. Root Users only."
            },
            "delete": {
                "summary": "Delete a Customer",
                "description": "Delete a Customer. Root Users only."
            }
        },
        "/customers/{customerId}/users": {
            "get": {
                "summary": "Search Users",
                "description": "Search Users belonging to a Customer. Root Users only."
            }
        },
        "/notifications": {
            "get": {
                "summary": "Get all Notifications",
                "description": "Get all Notifications belonging to the current authenticated User in reverse time order."
            },
            "post": {
                "summary": "Create a new Notification",
                "description": "Create a new Notification for the current authenticated User."
            }
        },
        "/notifications/{notificationId}": {
            "delete": {
                "summary": "Delete a notification",
                "description": "Delete (dismiss) a Notification belonging to the current authenticated User."
            }
        },
        "/settings/password": {
            "patch": {
                "summary": "Change the User password",
                "description": "Change the password for the current authenticated User."
            }
        },
        "/settings/profile": {
            "get": {
                "summary": "Get the User profile",
                "description": "Get the User profile for the current authenticated User."
            },
            "patch": {
                "summary": "Update the User profile",
                "description": "Update the User profile for the current authenticated User."
            }
        },
        "/settings/account": {
            "get": {
                "summary": "Get the Customer account",
                "description": "Get the Customer account information for the current authenticated User. Admin only."
            },
            "patch": {
                "summary": "Update the Customer account",
                "description": "Update the Customer account inormation for the current authenticated User. Admin only."
            }
        },
        "/users": {
            "get": {
                "summary": "Search Users",
                "description": "Search all Users belonging to the Customer of the current authenticated User. Admin only."
            },
            "post": {
                "summary": "Create a new User",
                "description": "Create a new User for the Customer of the current authenticated User. Admin only."
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Get a User profile",
                "description": "Get a User profile belonging to the current authenticated Customer. Admin only."
            },
            "patch": {
                "summary": "Update a User profile",
                "description": "Update a User profile belonging to the current authenticated Customer. Admin only."
            },
            "delete": {
                "summary": "Delete a User",
                "description": "Delete a User belonging to the current authenticated Customer. Admin only."
            }
        },
        "/users/{userId}/impersonate": {
            "get": {
                "summary": "Impersonate a User",
                "description": "Get a valid JWT for a User to impersnate them on the platform for support and diagnosis. Root only."
            }
        }
    }
}
